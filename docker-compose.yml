version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: foodify
      POSTGRES_USER: foodify
      POSTGRES_PASSWORD: foodify
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    depends_on:
       zookeeper:
         condition: service_started
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  eureka:
    build:
      context: .
      dockerfile: services/eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"

  image-service:
    build:
      context: .
      dockerfile: services/image-service/Dockerfile
    depends_on:
      eureka:
        condition: service_started
    environment:
      - SPRING_APPLICATION_NAME=image-service
      - EUREKA_SERVER_URL=http://eureka:8761/eureka
      - SERVER_PORT=8080
      - IMAGES_LOCATION=/app/uploads
      - IMAGES_PUBLIC_BASE_URL=http://localhost:8080/images
    ports:
      - "8082:8080"
    volumes:
      - image_service_uploads:/app/uploads

  push-service:
    build:
      context: .
      dockerfile: services/push-service/Dockerfile
    depends_on:
      eureka:
        condition: service_started
    environment:
      - EUREKA_SERVER_URL=http://eureka:8761/eureka
      - SERVER_PORT=8083
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/serviceAccountKey.json
    ports:
      - "8083:8083"
    volumes:
      - ./serviceAccountKey.json:/app/config/serviceAccountKey.json
    restart: on-failure

  app:
    build:
      context: .
      dockerfile: services/server/Dockerfile
    container_name: foodify-app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started
      eureka:
        condition: service_started
      image-service:
        condition: service_started
      push-service:
        condition: service_started
    ports:
      - "8084:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/foodify
      SPRING_DATASOURCE_USERNAME: foodify
      SPRING_DATASOURCE_PASSWORD: foodify
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      EUREKA_SERVER_URL: http://eureka:8761/eureka
      IMAGE_SERVICE_SERVICE_ID: image-service
      IMAGE_SERVICE_PUBLIC_BASE_URL: http://localhost:8080/images
      PUSH_SERVICE_SERVICE_ID: push-service
    volumes:
      - ./uploads:/app/uploads
    restart: on-failure

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    depends_on:
      eureka:
        condition: service_started
      app:
        condition: service_started
      image-service:
        condition: service_started
    environment:
      - EUREKA_SERVER_URL=http://eureka:8761/eureka
      - SERVER_PORT=8080
    ports:
      - "8080:8080"

volumes:
  postgres_data:
  redis_data:
  image_service_uploads:
