spring:
  application:
    name: foodify-server
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5434/foodify}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:foodify}
    password: ${DATABASE_PASSWORD:foodify}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    out-of-order: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 507898158443-v30o4karkuovc0fb3qq43f482am22uid.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true

server:
  port: 8081
  tomcat:
    threads:
      max: ${SERVER_TOMCAT_THREADS_MAX:200}
      min-spare: ${SERVER_TOMCAT_THREADS_MIN_SPARE:20}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,threaddump
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: foodify-server

orders:
  archive:
    fixed-delay-ms: 3600000
    completed-after-hours: 72
    batch-size: 200
  view:
    restaurant-snapshot-limit: 100
    pending-driver-limit: 25

google:
  maps:
    api:
      key: AIzaSyDLnMZhFNGZvImKZCCMXv6Qz7sTzPyLvfY

logging:
  level:
    root: info
    org:
      apache:
        kafka: ERROR
      springframework:
        kafka: ERROR

driver:
  session:
    heartbeat-timeout-seconds: 120
    heartbeat-check-interval-ms: 30000

guardrails:
  rate-limits:
    - name: order-placement
      method: POST
      paths:
        - /api/orders
      capacity: ${GUARDRAILS_ORDERS_CAPACITY:50}
      window: PT1S
    - name: nearby-search
      method: GET
      paths:
        - /api/client/nearby
      capacity: ${GUARDRAILS_NEARBY_CAPACITY:30}
      window: PT1S

image-service:
  service-id: ${IMAGE_SERVICE_SERVICE_ID:image-service}
  base-url: ${IMAGE_SERVICE_BASE_URL:http://image-service}
  public-base-url: ${IMAGE_SERVICE_PUBLIC_BASE_URL:http://image-service/images}
