spring:
  application:
    name: foodify-platform
  config:
    import: optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888}
  cloud:
    config:
      fail-fast: false
    discovery:
      enabled: true
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.foodify.server.modules.orders.messaging.lifecycle
        spring.json.value.default.type: com.foodify.server.modules.orders.messaging.lifecycle.OrderLifecycleMessage

app:
  messaging:
    orders:
      lifecycle-topic: orders.lifecycle
      outbox:
        enabled: true
        poll-interval: 5000
        retry-delay: 60000
        batch-size: 50
  orders:
    tracking:
      enabled: true
      key-prefix: orders:tracking:
      ttl: PT24H
      kafka:
        enabled: false
        group-id: order-tracking-projection
        concurrency: 1
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/foodify}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:foodify}
    password: ${DATABASE_PASSWORD:foodify}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 507898158443-v30o4karkuovc0fb3qq43f482am22uid.apps.googleusercontent.com
            client-secret: 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
            scope: profile, email

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

server:
  port: 8081

orders:
  archive:
    fixed-delay-ms: 3600000
    completed-after-hours: 72

google:
  maps:
    api:
      key: AIzaSyDLnMZhFNGZvImKZCCMXv6Qz7sTzPyLvfY

logging:
  level:
    root: info
    org:
      apache:
        kafka: ERROR
      springframework:
        kafka: ERROR

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://localhost:4317}
